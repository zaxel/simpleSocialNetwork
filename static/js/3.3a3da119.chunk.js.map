{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/profileHeader.jpg","assets/images/socials/facebook.svg","assets/images/socials/vk.svg","assets/images/socials/twitter.svg","assets/images/socials/instagram.svg","assets/images/socials/youtube.svg","assets/images/socials/github.svg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDescription.jsx","components/Profile/ProfileInfo/ProfileDescriptionForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","postMessageContainer","src","postMessage","message","postLikes","likes","maxLength200","maxLength","MyPostsReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","RequiredFieldTextarea","name","validate","required","MyPosts","postItem","posts","map","post","key","id","React","createRef","postBlock","formData","addPost","textInput","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","text","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatus","profileInactiveStatus","onClick","isOwner","stausHelp","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDescription","userDescr","userName","profile","fullName","userAbout","aboutMe","userSocialsContainer","userWeb","contacts","website","href","userLink","mainLink","userSocials","facebook","vk","twitter","instagram","youtube","github","userJobsSearchBlock","userJobsSearch","lookingForAJob","userJobsSearchDescr","lookingForAJobDescription","maxLength20","minLeight5","minLength","ProfileReduxForm","error","profileForm","CreateField","RenderFieldInput","alphaNumeric","profileSocialsContainer","profileSocials","profileLabel","jobDescription","ProfileDescriptionForm","profileObject","userId","authorizedUserId","updateProfile","then","deActivateProfileEditMode","initialValues","ProfileInfo","editProfileMode","setEditProfileMode","Preloader","profileContainer","headerImg","profileHeader","descriptionBlock","userPhotoContainer","userPhotoBlock","userImgContainer","photos","small","userPhoto","uploadButtonContainer","for","uploadButton","type","target","files","length","savePhoto","editProfile","userDescrContainer","Profile","activateEditProfileMode","store","ProfileContainer","this","match","params","history","push","setProfile","setUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3a3da119.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"ProfileInfo_headerImg__16zK9\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2zhdX\",\"userPhotoContainer\":\"ProfileInfo_userPhotoContainer__Lh-6Z\",\"userImgContainer\":\"ProfileInfo_userImgContainer__20xXA\",\"userDescrContainer\":\"ProfileInfo_userDescrContainer__2v5Gi\",\"userSocials\":\"ProfileInfo_userSocials__3Jb0w\",\"userName\":\"ProfileInfo_userName__u2FIv\",\"userAbout\":\"ProfileInfo_userAbout__2af_7\",\"userWeb\":\"ProfileInfo_userWeb__NEi9A\",\"userLink\":\"ProfileInfo_userLink__sk8nN\",\"userJobsSearchBlock\":\"ProfileInfo_userJobsSearchBlock__33hKe\",\"editProfile\":\"ProfileInfo_editProfile__2OMvI\",\"error\":\"ProfileInfo_error__1UeFR\",\"uploadButtonContainer\":\"ProfileInfo_uploadButtonContainer__1nEVc\",\"uploadButton\":\"ProfileInfo_uploadButton__1WL6Z\",\"profileStatus\":\"ProfileInfo_profileStatus__1JwAt\",\"stausHelp\":\"ProfileInfo_stausHelp__29MuI\",\"profileInactiveStatus\":\"ProfileInfo_profileInactiveStatus__3BzdU\",\"profileForm\":\"ProfileInfo_profileForm__fZQ-j\",\"profileSocialsContainer\":\"ProfileInfo_profileSocialsContainer__NwMUR\",\"profileSocials\":\"ProfileInfo_profileSocials__orfdm\",\"profileLabel\":\"ProfileInfo_profileLabel__3GQs6\",\"jobDescription\":\"ProfileInfo_jobDescription__341ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__1khlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3UUrd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__21rK-\",\"postMessageContainer\":\"Post_postMessageContainer__3PLcM\",\"postLikes\":\"Post_postLikes__3465U\",\"postMessage\":\"Post_postMessage___yUnf\"};","module.exports = __webpack_public_path__ + \"static/media/profileHeader.8f0e1417.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.53757d93.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.60e31664.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.6620c8ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.6c6931f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.c80ca203.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.ec5bc1b3.svg\";","import React from 'react';\r\nimport classes from  './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n   <div className={classes.item}>\r\n    <div className={classes.postMessageContainer}>\r\n      <img src='https://download-cs.net/steam/avatars/3447.jpg' />\r\n     <div className={classes.postMessage}>{props.message}</div>\r\n    </div>\r\n     <div className={classes.postLikes}>{props.likes} likes</div>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {RequiredFieldTextarea} from './../../common/FormsControls/FormsControls'\r\nimport {required, maxLength} from './../../../utils/validators/Validators';\r\n\r\n\r\nconst maxLength200 = maxLength(200);\r\n\r\n\r\nconst MyPostsMessageForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={RequiredFieldTextarea} name={'textInput'} validate={[required, maxLength200]}></Field>\r\n      <div>\r\n        <button>Add Post</button>\r\n        {/* <button>Remove</button> */}\r\n      </div>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsReduxMessageForm = reduxForm({form: \"myPosts\"})(MyPostsMessageForm)\r\n\r\nconst MyPosts = (props) => {\r\n  // let postData = [\r\n  //   { id: 1, likes: 12, post: \"Hi! How are you?\" },\r\n  //   { id: 2, likes: 122, post: \"It s my first post.\" },\r\n  //   { id: 3, likes: 1, post: \"Gatsby is the best way to\" },\r\n  //   { id: 4, likes: 65, post: \"The following toolchains offer more flexibility and choice.\" },\r\n  //   { id: 5, likes: 3, post: \"We recommend them to more experienced users\" },\r\n  // ];\r\n\r\n  let postItem = props.posts.map((post) => (\r\n    <Post key={post.id} message={post.post} likes={post.likes} />\r\n  ));\r\n\r\n  let newPostRef = React.createRef();\r\n\r\n  let onAddPost = ()=>{\r\n    props.addPost();\r\n    // props.dispatch(addPostActionCreator());\r\n    \r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostRef.current.value;\r\n    // props.dispatch(addUpdateNewPostCreator(text));\r\n    props.UpdateNewPostText(text);\r\n\r\n  }\r\n\r\n  const onSubmit = (formData) =>{\r\n    // alert(formData.textInput);\r\n    props.addPost(formData.textInput);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.postBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostsReduxMessageForm onSubmit={onSubmit}/>\r\n      <div>{postItem}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator, addUpdateNewPostCreator} from './../../../redux/ProfileReducer'\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    // UpdateNewPostText: (text) => {dispatch(addUpdateNewPostCreator(text))},\r\n    addPost: (text) => {dispatch(addPostActionCreator(text))}\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus =(props) => {\r\n\r\n  //  let stateWithSetState = useState(false);\r\n  //  let editMode = stateWithSetState[0];\r\n  //  let setEditMode = stateWithSetState[1];\r\n  // **Same as below\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  \r\n  useEffect(()=>{\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    props.isOwner && setEditMode(true);\r\n  };\r\n  \r\n  const deActivateEditMode = () => {\r\n    setEditMode(false);\r\n    \r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n      \r\n  }\r\n  \r\n\r\n\r\n  \r\n  return(\r\n    <div className={classes.profileStatus}>\r\n    {!editMode &&\r\n      <div className={classes.profileInactiveStatus}>\r\n        <span onClick={activateEditMode}>{props.status || \"----\"}</span>\r\n        {props.isOwner&&<div className={classes.stausHelp}>what's going on arround?</div>}\r\n      </div>\r\n    }\r\n    {editMode &&\r\n      <div >\r\n        <input onChange={onStatusChange} value={status}   autoFocus={true} onBlur={deActivateEditMode}/>\r\n      </div>\r\n    }\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default ProfileStatus;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport facebook from './../../../assets/images/socials/facebook.svg';\r\nimport vk from './../../../assets/images/socials/vk.svg';\r\nimport twitter from './../../../assets/images/socials/twitter.svg';\r\nimport instagram from './../../../assets/images/socials/instagram.svg';\r\nimport youtube from './../../../assets/images/socials/youtube.svg';\r\nimport github from './../../../assets/images/socials/github.svg';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileDescription =(props) => {\r\n\r\n \r\n  \r\n  return( \r\n  <>\r\n  <div className={classes.userDescr}>\r\n\r\n\r\n            \r\n\r\n            <div className={classes.userName}>{props.profile.fullName}</div>\r\n            \r\n\r\n\r\n\r\n\r\n\r\n            {/* <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/> */}\r\n            \r\n            \r\n            <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} isOwner={props.isOwner} />\r\n\r\n            <div className={classes.userAbout}>{props.profile.aboutMe ? props.profile.aboutMe : 'Some user descriptions here...'}</div>\r\n            \r\n            \r\n            {/* <div className={classes.userAbout}>{props.profile.aboutMe ? <ProfileDescription {...props}/> : 'Some user descriptions here...'}</div> */}\r\n\r\n\r\n            <div className={classes.userSocialsContainer}>\r\n              <div className={classes.userWeb}> \r\n                WebSite: {props.profile.contacts.website ? <a href={props.profile.contacts.website}>{props.profile.contacts.website}</a> : 'No'}\r\n              </div>\r\n              <div className={classes.userLink}> \r\n                MainLink: {props.profile.contacts.mainLink ? <a href={props.profile.contacts.mainLink}>{props.profile.contacts.mainLink}</a> : 'No'}\r\n              </div>\r\n              <div className={classes.userSocials}>\r\n                {props.profile.contacts.facebook ? <a href={props.profile.contacts.facebook}><img src={facebook}/></a> : null}\r\n                {props.profile.contacts.vk ? <a href={props.profile.contacts.vk}><img src={vk}/></a> : null}\r\n                {props.profile.contacts.twitter ? <a href={props.profile.contacts.twitter}><img src={twitter}/></a> : null}\r\n                {props.profile.contacts.instagram ? <a href={props.profile.contacts.instagram}><img src={instagram}/></a> : null}\r\n                {props.profile.contacts.youtube ? <a href={props.profile.contacts.youtube}><img src={youtube}/></a> : null}\r\n                {props.profile.contacts.github ? <a href={props.profile.contacts.github}><img src={github}/></a> : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.userJobsSearchBlock}>\r\n            <div className={classes.userJobsSearch}>Looking for the job: \r\n              {props.profile.lookingForAJob ? 'YES' : 'NO'}\r\n            </div>\r\n            <div className={classes.userJobsSearchDescr}>Descriptions: \r\n              {props.profile.lookingForAJobDescription \r\n              ? props.profile.lookingForAJobDescription \r\n              : 'No descriptions added yet'}\r\n            </div>\r\n          </div>\r\n     </>   \r\n  );\r\n  \r\n}\r\nexport default ProfileDescription;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {RequiredFieldTextarea, RenderFieldInput, CreateField} from './../../common/FormsControls/FormsControls';\r\nimport {required, minLength, maxLength, /*isUrlValid*/ alphaNumeric} from './../../../utils/validators/Validators';\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst maxLength20 = maxLength(20);\r\nconst maxLength200 = maxLength(200);\r\nconst minLeight5 = minLength(5);\r\n\r\nconst ProfileForm = ({handleSubmit, error}) => {\r\n  \r\n  return(\r\n  <div className={classes.profileForm}>\r\n    <form onSubmit={handleSubmit} >\r\n      <div>Name:</div>\r\n      {CreateField('NAME', RenderFieldInput, [required, minLeight5, maxLength20], 'fullName', 'text', alphaNumeric)}\r\n      <div>About me:</div>\r\n      {CreateField('ABOUT ME', RequiredFieldTextarea, [minLeight5, maxLength200], 'aboutMe', 'text', null)}\r\n      <div className={classes.profileSocialsContainer}>\r\n        <div className={classes.profileSocials}>Socials:</div>\r\n        <div>WebSite:</div>\r\n        {CreateField('Your WebSite', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'website', 'text', null)}\r\n        <div>MainLink:</div>\r\n        {CreateField('Main Link', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'mainLink', 'text', null)}\r\n        <div>GitHub:</div>\r\n        {CreateField('GitHub', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'github', 'text', null)}\r\n        <div>VK:</div>\r\n        {CreateField('VK', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'vk', 'text', null)}\r\n        <div>Facebook:</div>\r\n        {CreateField('Facebook', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'facebook', 'text', null)}\r\n        <div>Instagram:</div>\r\n        {CreateField('Instagram', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'instagram', 'text', null)}\r\n        <div>Twitter:</div>\r\n        {CreateField('Twitter', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'twitter', 'text', null)}\r\n        <div>youTube:</div>\r\n        {CreateField('youTube', RenderFieldInput, [minLeight5, maxLength200, /*isUrlValid*/], 'youtube', 'text', null)}\r\n      </div>\r\n      {/* <div>Looking For Job:</div>\r\n      {CreateField('', 'input', [], 'lookingForAJob', 'checkbox', null)} */}\r\n        <label className={classes.profileLabel}>\r\n                    {CreateField(null, 'input', [], 'lookingForAJob', 'checkbox', null, ' Looking For Job')}\r\n                </label>\r\n      <div className={classes.jobDescription}>Job Description:</div>\r\n      {CreateField('Job Description', RequiredFieldTextarea, [minLeight5, maxLength200], 'lookingForAJobDescription', 'text', null)}\r\n      {error && <div className={classes.error}> {error} </div>}\r\n      <div>\r\n        <button >SAVE PROFILE</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n    \r\n  );\r\n}\r\n\r\n\r\nconst ProfileReduxForm = reduxForm({form: \"profile\"})(ProfileForm);\r\n\r\nconst ProfileDescriptionForm =(props) => {\r\n  const onSubmit = (formData) =>{\r\n    let userId = props.authorizedUserId;\r\n    const profileObject = {\r\n      userId,\r\n      aboutMe: (formData.aboutMe ? formData.aboutMe : \"some user description here\"),\r\n      contacts: {\r\n          facebook: formData.facebook,\r\n          github: formData.github,\r\n          instagram: formData.instagram,\r\n          mainLink: formData.mainLink,\r\n          twitter: formData.twitter,\r\n          vk: formData.vk,\r\n          website: formData.website,\r\n          youtube: formData.youtube\r\n      },\r\n      lookingForAJob: (formData.lookingForAJob ? formData.lookingForAJob : false),\r\n      lookingForAJobDescription: (formData.lookingForAJobDescription ? formData.lookingForAJobDescription : \"-----\"),\r\n      fullName: formData.fullName\r\n\r\n      \r\n    }\r\n    \r\n    props.updateProfile(profileObject).then(()=>{\r\n        props.deActivateProfileEditMode();\r\n    })\r\n    \r\n  }\r\n  return(\r\n    <>\r\n      <ProfileReduxForm onSubmit={onSubmit}\r\n        initialValues={props.initialValues}\r\n      />\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\n\r\n\r\nexport default ProfileDescriptionForm;\r\n","import React, { useState, useEffect} from 'react';\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from './../../common/Preloader/Preloader';\r\nimport profileHeader from './../../../assets/images/profileHeader.jpg';\r\n\r\nimport userPhoto from './../../../assets/images/user.jpg';\r\n\r\nimport ProfileDescription from './ProfileDescription';\r\nimport ProfileDescriptionForm from './ProfileDescriptionForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editProfileMode, setEditProfileMode] = useState(false);\r\n\r\n  if(!props.profile){\r\n    return(\r\n      <Preloader/> \r\n    );\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) =>{\r\n    if(e.target.files.length)\r\n    {props.savePhoto(e.target.files[0])};\r\n  }\r\n\r\n  \r\n\r\n  const activateEditProfileMode = () => {\r\n    props.isOwner && setEditProfileMode(true);\r\n  };\r\n  \r\n  const deActivateProfileEditMode = () => {\r\n    setEditProfileMode(false);\r\n    // props.updateUserStatus(status);\r\n  }\r\n\r\n  const initialValues = {\r\n    aboutMe: props.profile.aboutMe,\r\n    facebook: props.profile.contacts.facebook,\r\n    github: props.profile.contacts.github,\r\n    instagram: props.profile.contacts.instagram,\r\n    mainLink: props.profile.contacts.mainLink,\r\n    twitter: props.profile.contacts.twitter,\r\n    vk: props.profile.contacts.vk,\r\n    website: props.profile.contacts.website,\r\n    youtube: props.profile.contacts.youtube,\r\n    lookingForAJob: props.profile.lookingForAJob,\r\n    lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n    fullName: props.profile.fullName,\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.profileContainer}>\r\n      <div className={classes.headerImg}>\r\n        <img src={profileHeader} />\r\n      </div>\r\n      <div className={classes.descriptionBlock}>\r\n        <div className={classes.userPhotoContainer}>\r\n          <div className={classes.userPhotoBlock}>\r\n            <div className={classes.userImgContainer}>\r\n              <img\r\n                src={\r\n                  props.profile.photos.small\r\n                    ? props.profile.photos.small\r\n                    : userPhoto\r\n                }\r\n              />\r\n            </div>\r\n            \r\n            {props.isOwner && (\r\n              <div className={classes.uploadButtonContainer}>\r\n                <label for='file-upload' className={classes.uploadButton}>\r\n                  <p>Upload Photo</p>\r\n                </label>\r\n                <input id='file-upload' type={\"file\"} onChange={onMainPhotoSelected} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.editProfile}>\r\n          {(props.isOwner && !editProfileMode) &&\r\n            <button onClick={activateEditProfileMode}>edit profile</button>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.userDescrContainer}>\r\n        {!editProfileMode ? <ProfileDescription\r\n            isOwner={props.isOwner}\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateUserStatus={props.updateUserStatus}\r\n            savePhoto={props.savePhoto}\r\n            authorizedUserId={props.authorizedUserId}\r\n          /> :\r\n          <ProfileDescriptionForm \r\n          authorizedUserId={props.authorizedUserId} \r\n          updateProfile={props.updateProfile}\r\n          isOwner={props.isOwner}\r\n          deActivateProfileEditMode={deActivateProfileEditMode}\r\n          initialValues={initialValues}\r\n          />}\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={classes.profileContainer}>\r\n      <ProfileInfo \r\n        isOwner={props.isOwner}\r\n        profile={props.profile} \r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n        savePhoto={props.savePhoto}\r\n        updateProfile={props.updateProfile}\r\n        authorizedUserId={props.authorizedUserId}\r\n        activateEditProfileMode={props.activateEditProfileMode}\r\n        deActivateProfileEditMode={props.deActivateProfileEditMode}\r\n        />\r\n        \r\n      <MyPostsContainer store={props.store}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {setProfile, setUserStatus, updateUserStatus, savePhoto, updateProfile} from './../../redux/ProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from \"./Profile.module.css\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId=this.props.authorizedUserId\r\n      if(!userId){\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n\r\n    this.props.setProfile(userId);\r\n    this.props.setUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    if(this.props.match.params.userId != prevProps.match.params.userId)\r\n    this.refreshProfile();\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n      \r\n      <div >\r\n        <Profile {...this.props} \r\n        isOwner = {!this.props.match.params.userId}\r\n        // profile={this.props.profile} \r\n        // isAuth={this.props.isAuth} \r\n        // status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        updateProfile={this.props.updateProfile}\r\n        authorizedUserId={this.props.authorizedUserId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) =>({\r\n    \r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setProfile, setUserStatus, updateUserStatus, \r\n    savePhoto, updateProfile}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}